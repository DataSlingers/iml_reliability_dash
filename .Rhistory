library(cpi)
library(mlr)
library(tictoc)
library(mlr3learners)
library(floodgate)
library(methods)
library(glmnet)
# library(surfin)
library(devtools)  # to install randomForestCI package from github
library(randomForest)  # to compare forest implementations
library(rpart) # for kyphosis data
library(MASS) # for Boston housing and breast cancer data        library(surfin)
# library(randomForestCI)
library(grf)
args = commandArgs(trailingOnly=TRUE)
# snr=5
size=1
generate = 'linearsparse'
#generate = 'linearsparse'
Ns=c(500,1000)
N = Ns[size]
M = 200
###########
###3 only mlr3 task
##################3
svmm = lrn( 'classif.svm',predict_type = 'prob',kernel = 'radial')## default is kernel RBF
ridgecv = lrn( 'classif.cv_glmnet',alpha=0,predict_type = 'prob')
rff = lrn('classif.ranger',predict_type = 'prob')
alpha=0.1
iters = 100
fit_funcs_name = c('Ridge (CV)','RF','SVM')
for (snr in c(2:10)){
print(snr)
f = paste0('class/sameM_cpireverse_',generate,'_class_',size,'_',snr,'_.csv')
library("reticulate")
print(N)
print(snr)
print(generate)
# py_run_string("X,Y,X1,Y1 = SimuRealAutoclassressive(200,4,10000,3,seed = 123*itrial+456)")
M=200
}
